@charset "UTF-8";

/* esta fonte foi importada da net: google fonts. pegou-se o url da mesma e o nome da font-family */
@import url('https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap');

/* esta fonte está incorporada na pasta do projecto */
@font-face {
    font-family: 'Android';
    src: url('../fontes/idroid.otf') format('opentype');
    font-weight: bold;
}

/* Raíz da árvore do documento: tudo que se definir no root, 
vai servir para o documento inteiro. Criação de variáveis das cores e as fontes a usar no projecto */
:root {
    --cor0: #C5EBD6;
    --cor1: #83E1AD;
    --cor2: #3DDC84;
    --cor3: #2FA866;
    --cor4: #1A5C37;
    --cor5: #063D1E;

    /* ao se criar a variável das fontes tem que se ter o cuidade de escolher o nome da família da fonte. */
    --fonte-padrao: Arial, Verdana, Helvetica, sans-serif;
    --font-destaque: 'Bebas Neue', sans-serif;
    --font-android: 'Android';
}

/* selector global, todas as configurações vão obedecer essa característica, isto é todos os elementos do html */
* {
    margin: 0px;
    padding: 0px;
}

body {
    background-color: var(--cor0);
    font-family: var(--fonte-padrao);
}

a.externo::after {
    content:'\00A0\1F517'
}

header {
    background-image: linear-gradient(to bottom, var(--cor3), var(--cor5));
    background-color: var(--cor4);
    min-height: 150px;
    text-align: center;
    padding-top: 40px;
    padding-bottom: 10px;
}

header > h1 {
    color: white;
    font-family: var(--font-destaque);
    font-size: 3em;
    font-weight: normal;
    margin-bottom: 20px;
    text-shadow: 2px 2px 0px rgb(0, 0, 0, 0.466);
    
}

/* quando se criou o max width para 500px, ele se transformou num bloco
e para centralizar temos que criar uma margem automática */
header > p {
    font-family: var(--fonte-padrao);
    font-size: 1.2em;
    color: white;
    max-width: 600px;
    padding-right: 10px;
    padding-left: 10px;
    margin: auto;
    text-shadow: 2px 2px 0px rgb(0, 0, 0, 0.466);
    margin-bottom: 20px;
}

nav {
    background-color: var(--cor5);
    padding: 10px;
    box-shadow: 0px 7px 9px rgb(0, 0, 0, 0.363);
}

nav > a {
    color: var(--cor1);
    padding: 10px;
    border-radius: 6px;
    text-decoration: none;
    font-weight: bold;
    transition-duration: .5s;
}

nav > a:hover {
    background-color: var(--cor3);
    color: var(--cor5)
}

main {
    min-width: 300px;
    max-width: 1000px;
    margin: auto;
    margin-bottom: 30px;
    padding: 20px;
    background-color: white;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.419);
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
}

main h1 {
    color: var(--cor5);
    font-family: var(--font-android);
    font-weight: normal;
    font-size: 1.8em;
}

main h2 {
    font-family: var(--font-android);
    text-indent: 8px;
    font-size: 1.3em;
    font-weight: normal;
    background-image: linear-gradient(to right, var(--cor1), transparent); /* vai fazer o gradiente da direita e enfraquecendo*/
}

main p {
    margin: 15px 0px;
    text-align: justify;
    text-indent: 3em;
    line-height: 2em; /* isto é o espaçamento entre as linhas */
}

main strong {
    color: var(--cor4);
    font-weight: bold;
}

main a {
    text-decoration: none;
    font-weight: bold;
    color: var(--cor5);
    background-color: var(--cor1);
    padding: 2px 6px;
}

main a:hover {
    text-decoration: underline;
    color: var(--cor4);
}

main img {
    width: 100%;
}

/* a imagem como não é um bloco, para centraliza-la, temos que criar um display: block */
main img.pequena {
    max-width: 350px;
    display: block;
    margin: auto;
}

/* CONFIGURAÇÃO DO VÍDEO: estamos dando tratamento no vídeo do site para ficar responsivo. 1. colocamos o iframe numa div e atribuimos a classe video. 2: na css atribuimos primeiro uma cor para delimitar o mesmo vídeo usando a tag backgroun-color. 3: vamos colar o background que colocamos no fundo, colado a borda do browser, usamos o margin negativo para a esquera e direita e um espaçamento para baixo. 4: usar propriedade - position: relative. 5: vamos usar um padding-bottom para expandir o background que depois de usar o relative ele encolheu bastante */
div.video {
    background-color:var(--cor5);
    margin: 0px -20px 30px -20px;
    padding: 20px;

    padding-bottom: 57.1999%;
    position: relative;
}

/* CONFIGURAÇÃO DO IFRAME: 1: usar a propriedade - position: absolute. Quando usamos o absolute, temos os valores top (do vídeo para a borda), left, width, height */
div.video > iframe {
    position: absolute;
    top: 5%;
    left: 5%;
    width: 90%;
    height: 90%;
}

aside {
    background-color: var(--cor1);
    padding: 10px;
    border-radius: 10px;
    box-shadow: 3px 3px 8px grey;
    
}

aside h3 {
    background-color: var(--cor4);
    color: white;
    padding: 10px;
    margin: -10px -10px 0px -10px;
    border-radius: 10px 10px 0px 0px;
    font-family: var(--font-android);
    font-weight: normal;
    font-size: 1.2em;
}

aside > ul {
    /* este código do list-type buscamos no site imojipidia e copiamos o numero e colocamos a barra a frente. o 00a0 é pra dar espaço sem quebrar a linha*/
    list-style-type: '\2714\00A0\00A0'; 
    list-style-position: inside; /* é para colocar as marcas dentro da caixas, por padrão elas ficam de fora */
    columns: 2; /* para dividir a lista em colunas, neste caso serão em duas colunas */
}

footer {
    background-color: var(--cor5);
    color: white;
    text-align: center;
    font-size: 0.8em;
    padding: 5px;
}

footer a {
    color: white;
    font-weight: bolder;
    text-decoration: none;
}

footer a:hover {
    text-decoration: underline;
    color: var(--cor1)
}